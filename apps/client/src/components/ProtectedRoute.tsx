import React, { useEffect, useState } from "react";
import { useRouter } from "next/router";
import { useAuth } from "../context/AuthContext";
import { CircularProgress, Box } from "@mui/material";
import { ProtectedRouteProps } from "../utils/interfaces/IProtectedRouteProps";

const ProtectedRoute: React.FC<ProtectedRouteProps> = ({ children, roles }) => {
  const { isAuthenticated, isAuthLoading, user, logout } = useAuth();
  const router = useRouter();
  const [isVerified, setIsVerified] = useState(false);

  useEffect(() => {
    const verifyAccess = async () => {
      console.log("üîπ –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø:", { isAuthLoading, isAuthenticated, user });
      if (isAuthLoading) return; // –ñ–¥—ë–º –∑–∞–≥—Ä—É–∑–∫–∏

      if (!isAuthenticated) {
        console.warn("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω. –û–∂–∏–¥–∞–µ–º –ø–µ—Ä–µ–¥ —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–º...");
        return;
      }

      if (roles && !roles.includes(user?.role || "")) {
        console.warn("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤.");
        await logout();
        router.replace("/auth/login");
      }

      setIsVerified(true);
    };

    verifyAccess();
  }, [isAuthenticated, isAuthLoading, user, roles, router, logout]);

  // –ü–æ–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è ‚Äì –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–∞–¥–µ—Ä
  if (isAuthLoading || !isVerified) {
    return (
      <Box sx={{ display: "flex", justifyContent: "center", alignItems: "center", height: "100vh" }}>
        <CircularProgress />
      </Box>
    );
  }

  return <>{children}</>;
};

export default ProtectedRoute;
