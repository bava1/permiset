{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "PermiSET API",
    "description": "API for managing users, roles, and permissions"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": ["http"],
  "paths": {
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User authentication",
        "description": "Authenticates a user and returns tokens and user data.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": { "type": "string" },
                "password": { "type": "string" }
              },
              "required": ["email", "password"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Authentication successful",
            "schema": {
              "type": "object",
              "properties": {
                "token": { "type": "string" },
                "refreshToken": { "type": "string" },
                "user": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string" },
                    "name": { "type": "string" },
                    "email": { "type": "string" },
                    "role": { "type": "string" },
                    "permissions": { "type": "array", "items": { "type": "string" } }
                  }
                }
              }
            }
          },
          "401": { "description": "Invalid credentials" }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "description": "Ends the user's session and removes the refresh token.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "refreshToken": { "type": "string" }
              },
              "required": ["refreshToken"]
            }
          }
        ],
        "responses": {
          "200": { "description": "Logout successful" },
          "400": { "description": "Refresh token is missing" }
        }
      }
    },
    "/auth/verify": {
      "get": {
        "tags": ["Auth"],
        "summary": "Token verification",
        "description": "Verifies the validity of a user's token.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token"
          }
        ],
        "responses": {
          "200": { "description": "Token is valid" },
          "401": { "description": "Token is invalid" }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register a new user",
        "description": "Creates a new user in the system.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string" },
                "email": { "type": "string" },
                "password": { "type": "string" },
                "role": { "type": "string" },
                "status": { "type": "string" }
              },
              "required": ["name", "email", "password"]
            }
          }
        ],
        "responses": {
          "201": { "description": "User successfully created" },
          "400": { "description": "Invalid data" }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": ["Auth"],
        "summary": "Refresh access token",
        "description": "Generates a new access token using a refresh token.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "refreshToken": { "type": "string" }
              },
              "required": ["refreshToken"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Token successfully refreshed",
            "schema": {
              "type": "object",
              "properties": {
                "token": { "type": "string" }
              }
            }
          },
          "403": { "description": "Invalid refresh token" }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Retrieve all users",
        "responses": {
          "200": {
            "description": "List of users",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": { "type": "string" },
                  "name": { "type": "string" },
                  "email": { "type": "string" },
                  "role": { "type": "string" },
                  "status": { "type": "string" }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Users"],
        "summary": "Create a new user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string" },
                "email": { "type": "string" },
                "password": { "type": "string" },
                "role": { "type": "string" },
                "status": { "type": "string" }
              },
              "required": ["name", "email", "password", "role", "status"]
            }
          }
        ],
        "responses": {
          "201": { "description": "User successfully created" },
          "400": { "description": "Invalid data" }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Retrieve a user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User data",
            "schema": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "name": { "type": "string" },
                "email": { "type": "string" },
                "role": { "type": "string" },
                "status": { "type": "string" }
              }
            }
          },
          "404": { "description": "User not found" }
        }
      },
      "put": {
        "tags": ["Users"],
        "summary": "Update a user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string" },
                "email": { "type": "string" },
                "role": { "type": "string" },
                "status": { "type": "string" }
              }
            }
          }
        ],
        "responses": {
          "200": { "description": "User successfully updated" },
          "404": { "description": "User not found" }
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Delete a user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User ID"
          }
        ],
        "responses": {
          "204": { "description": "User successfully deleted" },
          "404": { "description": "User not found" }
        }
      }
    },
    "/roles": {
      "get": {
        "tags": ["Roles"],
        "summary": "Retrieve all roles",
        "responses": {
          "200": {
            "description": "List of roles",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": { "type": "string" },
                  "name": { "type": "string" },
                  "permissions": { "type": "array", "items": { "type": "string" } }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Roles"],
        "summary": "Create a new role",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string" },
                "permissions": { "type": "array", "items": { "type": "string" } }
              },
              "required": ["name", "permissions"]
            }
          }
        ],
        "responses": {
          "201": { "description": "Role successfully created" },
          "400": { "description": "Invalid data" }
        }
      }
    },
    "/roles/{id}": {
      "get": {
        "tags": ["Roles"],
        "summary": "Retrieve a role by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Role ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Role data",
            "schema": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "name": { "type": "string" },
                "permissions": { "type": "array", "items": { "type": "string" } }
              }
            }
          },
          "404": { "description": "Role not found" }
        }
      },
      "put": {
        "tags": ["Roles"],
        "summary": "Update a role",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string" },
                "permissions": { "type": "array", "items": { "type": "string" } }
              },
              "required": ["name", "permissions"]
            }
          }
        ],
        "responses": {
          "200": { "description": "Role successfully updated" },
          "404": { "description": "Role not found" }
        }
      },
      "delete": {
        "tags": ["Roles"],
        "summary": "Delete a role",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Role ID"
          }
        ],
        "responses": {
          "204": { "description": "Role successfully deleted" },
          "404": { "description": "Role not found" }
        }
      }
    }
  }
}
